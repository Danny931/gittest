/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FraxBridgeToken,
  FraxBridgeTokenInterface,
} from "../FraxBridgeToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "bridge_",
        type: "address",
      },
      {
        internalType: "address",
        name: "canonical_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "bridge",
        type: "address",
      },
    ],
    name: "BridgeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "canonical",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
    ],
    name: "updateBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016103803806200161083398101604081905262000034916200029b565b8351849084906200004d9060039060208501906200010b565b508051620000639060049060208401906200010b565b505050620000806200007a620000b560201b60201c565b620000b9565b600680546001600160a01b039384166001600160a01b0319918216179091556007805492909316911617905550620003679050565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000119906200032a565b90600052602060002090601f0160209004810192826200013d576000855562000188565b82601f106200015857805160ff191683800117855562000188565b8280016001018555821562000188579182015b82811115620001885782518255916020019190600101906200016b565b50620001969291506200019a565b5090565b5b808211156200019657600081556001016200019b565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001d957600080fd5b81516001600160401b0380821115620001f657620001f6620001b1565b604051601f8301601f19908116603f01168101908282118183101715620002215762000221620001b1565b816040528381526020925086838588010111156200023e57600080fd5b600091505b8382101562000262578582018301518183018401529082019062000243565b83821115620002745760008385830101525b9695505050505050565b80516001600160a01b03811681146200029657600080fd5b919050565b60008060008060808587031215620002b257600080fd5b84516001600160401b0380821115620002ca57600080fd5b620002d888838901620001c7565b95506020870151915080821115620002ef57600080fd5b50620002fe87828801620001c7565b9350506200030f604086016200027e565b91506200031f606086016200027e565b905092959194509250565b600181811c908216806200033f57607f821691505b602082108114156200036157634e487b7160e01b600052602260045260246000fd5b50919050565b61129980620003776000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c8063715018a6116100cd578063a457c2d711610081578063dd62ed3e11610066578063dd62ed3e146102d7578063e78cea9214610310578063f2fde38b1461032357600080fd5b8063a457c2d7146102b1578063a9059cbb146102c457600080fd5b80638da5cb5b116100b25780638da5cb5b1461028557806395d89b41146102965780639dc29fac1461029e57600080fd5b8063715018a614610275578063893d20e81461027d57600080fd5b8063313ce5671161012457806340c10f191161010957806340c10f19146102245780636eb382121461023757806370a082311461024c57600080fd5b8063313ce56714610202578063395093511461021157600080fd5b806318160ddd1161015557806318160ddd146101b257806323b872dd146101c457806326afaadd146101d757600080fd5b806306fdde0314610171578063095ea7b31461018f575b600080fd5b610179610336565b604051610186919061107c565b60405180910390f35b6101a261019d3660046110ed565b6103c8565b6040519015158152602001610186565b6002545b604051908152602001610186565b6101a26101d2366004611117565b6103de565b6007546101ea906001600160a01b031681565b6040516001600160a01b039091168152602001610186565b60405160128152602001610186565b6101a261021f3660046110ed565b6104a2565b6101a26102323660046110ed565b6104de565b61024a610245366004611153565b610671565b005b6101b661025a366004611153565b6001600160a01b031660009081526020819052604090205490565b61024a61072c565b6101ea610792565b6005546001600160a01b03166101ea565b6101796107ab565b6101a26102ac3660046110ed565b6107ba565b6101a26102bf3660046110ed565b61093f565b6101a26102d23660046110ed565b6109e6565b6101b66102e5366004611175565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6006546101ea906001600160a01b031681565b61024a610331366004611153565b6109f3565b606060038054610345906111a8565b80601f0160208091040260200160405190810160405280929190818152602001828054610371906111a8565b80156103be5780601f10610393576101008083540402835291602001916103be565b820191906000526020600020905b8154815290600101906020018083116103a157829003601f168201915b5050505050905090565b60006103d5338484610ad5565b50600192915050565b60006103eb848484610bfa565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561048a5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104978533858403610ad5565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103d59185906104d99086906111f9565b610ad5565b6006546000906001600160a01b0316331461053b5760405162461bcd60e51b815260206004820152601460248201527f63616c6c6572206973206e6f74206272696467650000000000000000000000006044820152606401610481565b6105453083610df8565b60075461055b906001600160a01b0316836103c8565b50600754604051639006a50f60e01b8152306004820152602481018490526000916001600160a01b031690639006a50f90604401602060405180830381600087803b1580156105a957600080fd5b505af11580156105bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e19190611211565b60075460405163a9059cbb60e01b81526001600160a01b0387811660048301526024820184905292935091169063a9059cbb90604401602060405180830381600087803b15801561063157600080fd5b505af1158015610645573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610669919061122a565b949350505050565b6005546001600160a01b031633146106cb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610481565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fe1694c0b21fdceff6411daed547c7463c2341b9695387bc82595b5b9b1851d4a9060200160405180910390a150565b6005546001600160a01b031633146107865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610481565b6107906000610ed7565b565b60006107a66005546001600160a01b031690565b905090565b606060048054610345906111a8565b6006546000906001600160a01b031633146108175760405162461bcd60e51b815260206004820152601460248201527f63616c6c6572206973206e6f74206272696467650000000000000000000000006044820152606401610481565b6007546040516323b872dd60e01b81526001600160a01b03858116600483015230602483015260448201859052909116906323b872dd90606401602060405180830381600087803b15801561086b57600080fd5b505af115801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a3919061122a565b5060075460405163280cf3ed60e01b8152306004820152602481018490526000916001600160a01b03169063280cf3ed90604401602060405180830381600087803b1580156108f157600080fd5b505af1158015610905573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109299190611211565b90506109353082610f36565b5060019392505050565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156109d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610481565b6109353385858403610ad5565b60006103d5338484610bfa565b6005546001600160a01b03163314610a4d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610481565b6001600160a01b038116610ac95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610481565b610ad281610ed7565b50565b6001600160a01b038316610b375760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610481565b6001600160a01b038216610b985760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610481565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610c765760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610481565b6001600160a01b038216610cd85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610481565b6001600160a01b03831660009081526020819052604090205481811015610d675760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610481565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610d9e9084906111f9565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610dea91815260200190565b60405180910390a350505050565b6001600160a01b038216610e4e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610481565b8060026000828254610e6091906111f9565b90915550506001600160a01b03821660009081526020819052604081208054839290610e8d9084906111f9565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610f965760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610481565b6001600160a01b0382166000908152602081905260409020548181101561100a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610481565b6001600160a01b038316600090815260208190526040812083830390556002805484929061103990849061124c565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610bed565b600060208083528351808285015260005b818110156110a95785810183015185820160400152820161108d565b818111156110bb576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146110e857600080fd5b919050565b6000806040838503121561110057600080fd5b611109836110d1565b946020939093013593505050565b60008060006060848603121561112c57600080fd5b611135846110d1565b9250611143602085016110d1565b9150604084013590509250925092565b60006020828403121561116557600080fd5b61116e826110d1565b9392505050565b6000806040838503121561118857600080fd5b611191836110d1565b915061119f602084016110d1565b90509250929050565b600181811c908216806111bc57607f821691505b602082108114156111dd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561120c5761120c6111e3565b500190565b60006020828403121561122357600080fd5b5051919050565b60006020828403121561123c57600080fd5b8151801515811461116e57600080fd5b60008282101561125e5761125e6111e3565b50039056fea26469706673582212206dbe82a7720b09b52a9ab724eec28472d785a18b52236bbe4c1f43fff759f27364736f6c63430008090033";

export class FraxBridgeToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name_: string,
    symbol_: string,
    bridge_: string,
    canonical_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FraxBridgeToken> {
    return super.deploy(
      name_,
      symbol_,
      bridge_,
      canonical_,
      overrides || {}
    ) as Promise<FraxBridgeToken>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    bridge_: string,
    canonical_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      bridge_,
      canonical_,
      overrides || {}
    );
  }
  attach(address: string): FraxBridgeToken {
    return super.attach(address) as FraxBridgeToken;
  }
  connect(signer: Signer): FraxBridgeToken__factory {
    return super.connect(signer) as FraxBridgeToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FraxBridgeTokenInterface {
    return new utils.Interface(_abi) as FraxBridgeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FraxBridgeToken {
    return new Contract(address, _abi, signerOrProvider) as FraxBridgeToken;
  }
}
